     1                                  %define ExitProcess _ExitProcess@4
     2                                  %define GetStdHandle _GetStdHandle@4
     3                                  %define WriteConsoleA _WriteConsoleA@20
     4                                  ; %define MessageBoxA _MessageBoxA@16
     5                                  ; %define ReadConsoleA _ReadConsoleA@20
     6                                  
     7                                  extern _printf
     8                                  extern GetStdHandle
     9                                  ;import GetStdHandle kernel32.dll 
    10                                  extern WriteConsoleA
    11                                  ;import WriteConsoleA user32.dll
    12                                  extern ExitProcess
    13                                  ;import ExitProcess kernel32.dll
    14                                  ; extern MessageBoxA
    15                                  ; ;import MessageBoxA user32.dll
    16                                  ; extern ReadConsoleA
    17                                  ; ;import ReadConsoleA user32.dll
    18                                  
    19                                  STD_INPUT_HANDLE equ -10
    20                                  STD_OUTPUT_HANDLE equ -11 
    21                                  
    22                                  section .code use32
    23                                  global _printfr
    24                                  
    25                                  ;-----------Strlen---------------------------------------------------------;
    26                                  ;  entry: edi - adress of string										   ;
    27                                  ;  destr: eax, ecx, edi													   ;
    28                                  ;  exit: e—Åx - num of characters before '0', edi - adress of last symbol   ;
    29                                  ;--------------------------------------------------------------------------;
    30 00000000 55                      Strlen:		push ebp
    31 00000001 89E5                    			mov ebp, esp
    32 00000003 9C                      			pushf
    33 00000004 FC                      			cld
    34                                  			
    35 00000005 B9FFFFFFFF              			mov ecx, -1
    36 0000000A 30C0                    			xor al,al
    37 0000000C F2AE                    			repne scasb
    38 0000000E F7D1                    			not ecx
    39 00000010 4F                      			dec edi
    40 00000011 4F                      			dec edi
    41 00000012 49                      			dec ecx
    42                                  			
    43 00000013 9D                      			popf
    44 00000014 C9                      			leave 
    45 00000015 C3                      			ret
    46                                  
    47                                  ;-----------ItoA-----------------------------------------------------------;
    48                                  ;  entry: eax - number, edi - adress of string destination,				   ;
    49                                  ;   ebx = adress of translation table, ecx - base of numeral system( < 36h);
    50                                  ;  destr: eax, edi, edx													   ;
    51                                  ;  exit: [esi] - string of ascii codes, edi - pointer to begin of string   ;
    52                                  ;--------------------------------------------------------------------------;
    53                                  ItoA32:		
    54 00000016 FD                      			std
    55                                  next32:		
    56 00000017 31D2                    			xor edx, edx
    57 00000019 F7F1                    			div ecx ; word
    58 0000001B 92                      			xchg edx, eax
    59                                  			
    60 0000001C D7                      			xlat
    61 0000001D AA                      			stosb
    62 0000001E 89D0                    			mov eax, edx
    63                                  
    64 00000020 84C0                    			test al, al; cmp al, 0
    65 00000022 75F3                    			jnz next32
    66 00000024 C3                      			ret
    67                                  			
    68                                  ;-----------EasyWrite@2---------------------------------------------------;
    69                                  ;  entry: 1. num of printing symbols									  ;
    70                                  ;		  2. adress of begin											  ;
    71                                  ;  destr: 																  ;
    72                                  ;  exit: 									 							  ;
    73                                  ;-------------------------------------------------------------------------;
    74 00000025 55                      EasyWrite:			push ebp
    75 00000026 89E5                    					mov ebp, esp
    76                                  					
    77 00000028 51                      					push ecx
    78 00000029 50                      					push eax
    79                                  
    80                                  write:		
    81 0000002A 6AF5                    					push STD_OUTPUT_HANDLE
    82 0000002C E8(00000000)            					call GetStdHandle
    83                                  					
    84 00000031 31C9                    					xor ecx, ecx
    85 00000033 51                      					push ecx
    86 00000034 51                      					push ecx
    87                                  					
    88 00000035 FF7508                  					push dword [ebp + 8] ; num of symbols		
    89 00000038 FF750C                  					push dword [ebp + 12]
    90                                  					
    91 0000003B 50                      					push eax
    92 0000003C E8(00000000)            					call WriteConsoleA	
    93                                  					
    94 00000041 59                      					pop ecx
    95 00000042 58                      					pop eax
    96                                  					
    97 00000043 89EC                    					mov esp, ebp
    98 00000045 5D                      					pop ebp
    99 00000046 C3                      					ret
   100                                  
   101                                  ;-----------_printfr--------------------------------------------------;
   102                                  ;  entry:  1. adress of string; Any number of parametres in stack     ;
   103                                  ;								  									  ;
   104                                  ;  destr: eax, ebx, ecx, edx, esi, edi								  ;
   105                                  ;  exit: eax - number												  ;
   106                                  ;---------------------------------------------------------------------;
   107 00000047 55                      _printfr:			push ebp
   108 00000048 89E5                    					mov ebp, esp
   109                                  					;STR_LENw0 equ [ebp - 4]
   110 0000004A 83EC08                  					sub esp, 8;optim
   111                                  					
   112 0000004D 68[25000000]            					 push string
   113 00000052 E8(00000000)            					 call _printf
   114                                  					
   115 00000057 8B7D08                  					 mov edi, [ebp + 8]
   116 0000005A 89FE                    					 mov esi, edi; esi - pointer to begin of string
   117 0000005C B9FFFFFFFF              					 mov ecx, -1
   118 00000061 FC                      					 cld
   119 00000062 B000                    					 mov al, 0
   120 00000064 F2AE                    					 repne scasb
   121                                  					 ;cmp edi,0  jmp error 
   122 00000066 F7D1                    					 not ecx; lenght of string
   123 00000068 49                      					 dec ecx; without '0'
   124 00000069 894DFC                  					 mov [ebp - 4], ecx; save it for later
   125 0000006C 4F                      					 dec edi; edi - pointer to last "real" symblol
   126                                  					 
   127 0000006D FD                      					 std
   128 0000006E B025                    					 mov al, '%'
   129 00000070 F2AE                    					 repne scasb ; check is there any '%' 
   130 00000072 7576                    					 jne WriteText ; if not use simple print
   131                                  					 
   132 00000074 8B4DFC                  					 mov ecx, [ebp - 4]
   133                                  					 
   134 00000077 FC                      					 cld
   135 00000078 BA01000000              					 mov edx, 1;edx - num of blocks
   136 0000007D 89F7                    					 mov edi, esi
   137 0000007F 89CB                    					 mov ebx, ecx
   138 00000081 F2AE                    					 repne scasb 
   139                                  BuildMAP:			 ;;;;;;;;;;;;;;;;
   140 00000083 29CB                    					 sub ebx, ecx; num of symbols in block
   141 00000085 4B                      					 dec ebx
   142 00000086 53                      					 push ebx
   143                                  					 ;inc edi; to get letter after '%'
   144                                  					 
   145                                  					 ;xor ebx, ebx
   146                                  					 ;mov bl, [edi]; !!!!!!!!!!!
   147                                  					 ;push ebx; optim
   148 00000087 47                      					 inc edi; to skip format letter
   149 00000088 49                      					 dec ecx; to skip format letter
   150                                  					 
   151 00000089 89CB                    					 mov ebx, ecx
   152 0000008B F2AE                    					 repne scasb 
   153                                  					 
   154 0000008D 42                      					 inc edx; edx - num of blocks
   155 0000008E 85C9                    					 test ecx, ecx
   156 00000090 75F1                    					 jne BuildMAP
   157                                  					 ;;;;;;;;;;;;;;;;
   158 00000092 29CB                    					 sub ebx, ecx; num of symbols in block
   159 00000094 53                      					 push ebx
   160                                  					 
   161 00000095 FD                      					 std
   162 00000096 31C0                    					 xor eax, eax; ah - symbol
   163 00000098 0375FC                  					 add esi, [ebp - 4]; esi - end of string
   164 0000009B 4E                      					 dec esi; one extra
   165 0000009C 89E7                    					 mov edi, esp 
   166 0000009E 83EF18                  					 sub edi, 24; edi - end of output
   167 000000A1 897DF8                  					 mov [ebp - 8], edi
   168 000000A4 8D5D0C                  					 lea ebx, [ebp + 12];ebx - contains parametres
   169 000000A7 59                      CreatOutputString:	 pop ecx
   170 000000A8 F3A4                    					 rep movsb 
   171 000000AA 8A06                    					 mov al, [esi]
   172 000000AC 3C64                    					 cmp al, 'd'
   173 000000AE 0F84C5000000            					 je ItoD
   174                                  					 
   175 000000B4 3C6F                    					 cmp al, 'o'
   176 000000B6 7445                    					 je ItoO
   177                                  					 
   178 000000B8 3C78                    					 cmp al, 'x'
   179 000000BA 0F8487000000            					 je ItoX
   180                                  					 
   181 000000C0 3C62                    					 cmp al, 'b'
   182 000000C2 745E                    					 je ItoB
   183                                  					 
   184 000000C4 3C63                    					 cmp al, 'c'
   185 000000C6 742E                    					 je ItoC
   186                                  					 
   187 000000C8 3C73                    					 cmp al, 's'
   188 000000CA 0F84C3000000            					 je ItoS
   189                                  					 
   190 000000D0 83C304                  SwitchEnd:			 add ebx, 4; next parameter
   191 000000D3 4E                      					 dec esi
   192 000000D4 4E                      					 dec esi
   193                                  					 
   194 000000D5 4A                      					 dec edx
   195 000000D6 75CF                    					 jnz CreatOutputString
   196                                  					 
   197 000000D8 47                      					 inc edi; one extra 
   198 000000D9 8B75F8                  					 mov esi, [ebp - 8]
   199 000000DC 29FE                    					 sub esi, edi
   200 000000DE 46                      					 inc esi
   201 000000DF 89FC                    					 mov esp, edi
   202                                  					 
   203 000000E1 57                      WriteF:		         push edi
   204 000000E2 56                      					 push esi
   205 000000E3 E83DFFFFFF              					 call EasyWrite
   206 000000E8 EB09                    					 jmp printfrLeave
   207                                  WriteText: 			 
   208 000000EA 56                      					 push esi
   209 000000EB FF75FC                  					 push dword [ebp - 4]
   210 000000EE E832FFFFFF              					 call EasyWrite		 
   211                                  printfrLeave:		 
   212 000000F3 FC                      					 cld
   213 000000F4 C9                      					 leave 
   214 000000F5 C3                      					 ret					 
   215                                  					 
   216 000000F6 8B03                    ItoC:				 mov eax, [ebx]
   217 000000F8 8807                    					 mov [edi], al
   218 000000FA 4F                      					 dec edi
   219 000000FB EBD3                    					 jmp SwitchEnd
   220                                  
   221 000000FD 8B03                    ItoO:				 mov eax, [ebx]
   222 000000FF C1E005                  ItoOnext:			 shl eax, 5
   223 00000102 C0E805                  					 shr al, 5
   224 00000105 0430                    					 add al, '0'
   225 00000107 8807                    					 mov [edi], al
   226 00000109 4F                      					 dec edi
   227 0000010A C1E808                  					 shr eax, 8
   228 0000010D 84C0                    					 test al, al
   229 0000010F 75EE                    					 jne ItoOnext
   230 00000111 8A4303                  					 mov al, [ebx + 3]
   231 00000114 84C0                    					 test al, al
   232 00000116 74B8                    					 je SwitchEnd
   233 00000118 C0E805                  					 shr al, 5
   234 0000011B 0430                    					 add al, '0'
   235 0000011D 8807                    					 mov [edi], al
   236 0000011F 4F                      					 dec edi
   237 00000120 EBAE                    					 jmp SwitchEnd
   238                                  					 
   239 00000122 8B03                    ItoB:				 mov eax, [ebx]
   240 00000124 C1E007                  ItoBnext:			 shl eax, 7
   241 00000127 C0E807                  					 shr al, 7
   242 0000012A 0430                    					 add al, '0'
   243 0000012C 8807                    					 mov [edi], al
   244 0000012E 4F                      					 dec edi
   245 0000012F C1E808                  					 shr eax, 8
   246 00000132 84C0                    					 test al, al
   247 00000134 75EE                    					 jne ItoBnext
   248 00000136 8A4303                  					 mov al, [ebx + 3]
   249 00000139 84C0                    					 test al, al
   250 0000013B 7493                    					 je SwitchEnd
   251 0000013D C0E807                  					 shr al, 7
   252 00000140 0430                    					 add al, '0'
   253 00000142 8807                    					 mov [edi], al
   254 00000144 4F                      					 dec edi
   255 00000145 EB89                    					 jmp SwitchEnd
   256                                  
   257 00000147 8B03                    ItoX:				 mov eax, [ebx]
   258 00000149 C1E004                  ItoXnext:			 shl eax, 4
   259 0000014C C0E804                  					 shr al, 4
   260 0000014F 3C0A                    					 cmp al,  10d
   261 00000151 1C69                    					 sbb al, 69h
   262 00000153 2F                      					 das
   263 00000154 8807                    					 mov [edi], al
   264 00000156 4F                      					 dec edi
   265 00000157 C1E808                  					 shr eax, 8
   266 0000015A 84C0                    					 test al, al
   267 0000015C 75EB                    					 jne ItoXnext
   268 0000015E 8A4303                  					 mov al, [ebx + 3]
   269 00000161 84C0                    					 test al, al
   270 00000163 0F8467FFFFFF            					 je SwitchEnd
   271 00000169 C0E804                  					 shr al, 4
   272 0000016C 3C0A                    					 cmp al, 10d
   273 0000016E 1C69                    					 sbb al, 69h
   274 00000170 2F                      					 das
   275 00000171 8807                    					 mov [edi], al
   276 00000173 4F                      					 dec edi
   277                                  					 
   278 00000174 E957FFFFFF              					 jmp SwitchEnd
   279                                  					 
   280                                  ItoD:				 
   281 00000179 8B03                    					 mov eax, [ebx]
   282 0000017B 52                      					 push edx
   283 0000017C 53                      					 push ebx
   284                                  					 
   285 0000017D B90A000000              					 mov ecx, 10d
   286 00000182 BB[00000000]            					 mov ebx, HexStr
   287 00000187 E88AFEFFFF              					 call ItoA32
   288                                  					 
   289 0000018C 5B                      					 pop ebx
   290 0000018D 5A                      					 pop edx
   291 0000018E E93DFFFFFF              					 jmp SwitchEnd
   292                                  					 
   293                                  					 
   294 00000193 51                      ItoS:				 push ecx
   295 00000194 56                      					 push esi
   296 00000195 57                      					 push edi
   297                                  					 
   298 00000196 8B3B                    					 mov edi, [ebx]
   299 00000198 E863FEFFFF              					 call Strlen
   300 0000019D 89FE                    					 mov esi, edi
   301 0000019F 5F                      					 pop edi
   302 000001A0 F3A4                    					 rep movsb
   303                                  					 
   304 000001A2 5E                      					 pop esi
   305 000001A3 59                      					 pop ecx 
   306 000001A4 E927FFFFFF              					 jmp SwitchEnd
   307                                  					 
   308                                  ; start:
   309                                  					 
   310                                  					 
   311                                  					 ; push 123d
   312                                  					 ; push 1234d
   313                                  					 ; push HexStr
   314                                  					 ; push 65530
   315                                  					 ; push String2
   316                                  					 ; push '<'
   317                                  					 ; push '3'
   318                                  					 ; push 3802
   319                                  					 ; push 100d
   320                                  					 ; push edi, String
   321                                  					 
   322                                  				
   323                                  					 ; call _printfr
   324                                  					
   325                                  ; exit:				 push 0
   326                                  					 ; call ExitProcess
   327                                  					
   328                                  section .data use32
   329                                  					;String2 db 'And I',0
   330 00000000 303132333435363738-     					HexStr db '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', 0
   330 00000009 394142434445464748-
   330 00000012 494A4B4C4D4E4F5051-
   330 0000001B 52535455565758595A-
   330 00000024 00                 
   331 00000025 E29594E29590E29590-     					string db '‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó', 0
   331 0000002E E29590E29590E29590-
   331 00000037 E29590E29590E29590-
   331 00000040 E29590E29590E29590-
   331 00000049 E29590E29590E29590-
   331 00000052 E29590E29590E29590-
   331 0000005B E29590E29590E29590-
   331 00000064 E29590E29590E29590-
   331 0000006D E29590E29590E29590-
   331 00000076 E29590E29590E29590-
   331 0000007F E29590E29590E29590-
   331 00000088 E29590E29590E29590-
   331 00000091 E29590E29590E29590-
   331 0000009A E29590E29590E29590-
   331 000000A3 E29590E29590E29590-
   331 000000AC E29590E29590E29590-
   331 000000B5 E29590E29590E29590-
   331 000000BE E29590E29590E29590-
   331 000000C7 E29590E29590E29590-
   331 000000D0 E29590E29590E29590-
   331 000000D9 E29590E29590E29590-
   331 000000E2 E29590E295970D0AE2-
   331 000000EB 9591207072696E7466-
   331 000000F4 72202D20666F726D61-
   331 000000FD 74207072696E742020-
   331 00000106 202020202020202020-
   331 0000010F 202020202020202020-
   331 00000118 202020202020202020-
   331 00000121 202020202020202020-
   331 0000012A 2020E295910D0AE295-
   331 00000133 9120656E7472793A20-
   331 0000013C 312E61647265737320-
   331 00000145 6F6620737472696E67-
   331 0000014E 3B20416E79206E756D-
   331 00000157 626572206F66207061-
   331 00000160 72616D657472657320-
   331 00000169 696E20737461636B20-
   331 00000172 20E295910D0AE29591-
   331 0000017B 2064657374723A2065-
   331 00000184 61782C206562782C20-
   331 0000018D 6563782C206564782C-
   331 00000196 206573692C20656469-
   331 0000019F 202020202020202020-
   331 000001A8 202020202020202020-
   331 000001B1 202020202020202020-
   331 000001BA E295910D0AE2959120-
   331 000001C3 657869743A20656178-
   331 000001CC 202D206E756D626572-
   331 000001D5 202020202020202020-
   331 000001DE 202020202020202020-
   331 000001E7 202020202020202020-
   331 000001F0 202020202020202020-
   331 000001F9 2020202020202020E2-
   331 00000202 95910D0AE2959AE295-
   331 0000020B 90E29590E29590E295-
   331 00000214 90E29590E29590E295-
   331 0000021D 90E29590E29590E295-
   331 00000226 90E29590E29590E295-
   331 0000022F 90E29590E29590E295-
   331 00000238 90E29590E29590E295-
   331 00000241 90E29590E29590E295-
   331 0000024A 90E29590E29590E295-
   331 00000253 90E29590E29590E295-
   331 0000025C 90E29590E29590E295-
   331 00000265 90E29590E29590E295-
   331 0000026E 90E29590E29590E295-
   331 00000277 90E29590E29590E295-
   331 00000280 90E29590E29590E295-
   331 00000289 90E29590E29590E295-
   331 00000292 90E29590E29590E295-
   331 0000029B 90E29590E29590E295-
   331 000002A4 90E29590E29590E295-
   331 000002AD 90E29590E29590E295-
   331 000002B6 90E29590E29590E295-
   331 000002BF 90E29590E29590E295-
   331 000002C8 9D0D0A00           
